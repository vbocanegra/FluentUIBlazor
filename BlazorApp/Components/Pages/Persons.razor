@page "/Persons"
<h3>Persons</h3>

<FluentDataGrid Items="@people" ResizableColumns=true Pagination="@pagination"
    GridTemplateColumns="0.2fr 1fr 0.2fr 0.2fr 0.2fr 0.2fr" 
    RowStyle="@rowStyle" Style="height: 405px; overflow:auto;"
    TGridItem="Person" OnRowFocus="HandleRowFocus">
    <PropertyColumn Property="@(p => p.PersonId)" Sortable="true" />
    <PropertyColumn Property="@(p => p.Name)" Sortable="true" />
    <PropertyColumn Property="@(p => p.BirthDate)" Format="yyyy-MM-dd" Sortable="true" />
</FluentDataGrid>

<FluentPaginator State="@pagination" />

@code {
    private class Person
    {
        public bool Selected { get; set; }    
        public int PersonId { get; set; }
        public string Name { get; set; }
        public DateOnly BirthDate { get; set; }

        public Person(bool selected, int personId, string name, DateOnly birthDate)
        {
            Selected = selected;
            PersonId = personId;
            Name = name;
            BirthDate = birthDate;
        }
    }

    PaginationState pagination = new PaginationState { ItemsPerPage = 10 };

    //Func<Person, string?> rowClass = x => x.Name.StartsWith("A") ? "highlighted-row" : null;
    Func<Person, string?> rowStyle = x => x.Selected ? "background-color: var(--highlight-bg);" : null;

    IQueryable<Person> people = new[]
    {
        new Person(false, 10895, "Jean Martin", new DateOnly(1985, 3, 16)),
        new Person(false, 10944, "António Langa", new DateOnly(1991, 12, 1)),
        new Person(false,11203, "Julie Smith", new DateOnly(1958, 10, 10)),
        new Person(true,11205, "Nur Sari", new DateOnly(1922, 4, 27)),
        new Person(false,11898, "Jose Hernandez", new DateOnly(2011, 5, 3)),
        new Person(false,12130, "Kenji Sato", new DateOnly(2004, 1, 9)),
    }.AsQueryable();

    private void HandleRowFocus(FluentDataGridRow<Person> row)
    {
        const bool V = true;
        row.Item.Selected = V;
        Console.WriteLine($"Row focused: {row.Item?.Selected}");
    }
}